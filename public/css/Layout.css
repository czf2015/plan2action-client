.page {}

.header {}

.main {}

.footer {}

.aside {}

.section {}

.dir {}

.subject {
    height: .75rem;
    font-size: .28rem;
    letter-spacing: .05em;
    color: #fff;
    background-color: rgb(9, 11, 148);
}

.article {}

.title {}

.subtitle {}

.content {}

.paragraph {}

.summary {}

.details {}

.separator {}

.feed {}

.banner {}

.toolbar {}


/** Flexbox centering
 * Horizontally and vertically centers a child element within a parent element using flexbox.

 > Explanation

 1. display: flex enables flexbox.

 2. justify-content: center centers the child horizontally.

 3. align-items: center centers the child vertically.

 */

.center {
    display: flex;
    justify-content: center;
    align-items: center;
}

.inline {
    display: inline;
}

.block {
    display: block;
}

.inline-block {
    display: inline-block;
}

.cell {
    display: table-cell;
}

.none {
    display: none;
}

.left {
    float: left;
}

.right {
    float: right;
}


/** Ensures that an element self-clears its children.

 > Explanation

 1. .clearfix::after defines a pseudo-element.

 2. content: '' allows the pseudo-element to affect layout.

 3. clear: both indicates that the left, right or both sides of the element cannot be adjacent to earlier floated elements within the same block formatting context.
 */

.clearfix::after {
    content: '';
    display: block;
    clear: both;
}

.absolute {
    position: absolute;
}

.relative {
    position: relative;
}

.fixed {
    position: fixed;
}

.flex {
    display: flex;
}

.scroll-x {
    overflow-x: auto;
}

.scroll-y {
    overflow-y: auto;
}

.badge {
    margin-top: -5px;
    margin-right: 6px;
    width: 50px;
    font-size: 12px;
    transform: scale(.5);
    color: #fff;
    background-color: red;
}

.icon {
    width: 32px;
    height: auto;
}

.icon.xs {
    width: 16px;
}

.icon.sm {
    width: 24px;
}

.icon.lg {
    width: 48px;
}

.icon.xl {
    width: 64px;
}
